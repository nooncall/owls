# github.com/nooncall/owls/go Global Configuration

# jwt configuration
jwt:
  signing-key: 'qmPlus'
  expires-time: 604800
  buffer-time: 86400

# zap logger configuration
zap:
  level: 'info'
  format: 'console'
  prefix: '[github.com/nooncall/owls/go]'
  director: 'log'
  link-name: 'latest_log'
  show-line: true
  encode-level: 'LowercaseColorLevelEncoder'
  stacktrace-key: 'stacktrace'
  log-in-console: true

# redis configuration
redis:
  db: 0
  addr: '177.7.0.14:6379'
  password: ''

# email configuration
email:
  to: 'xxx@qq.com'
  port: 465
  from: 'xxx@163.com'
  host: 'smtp.163.com'
  is-ssl: true
  secret: 'xxx'
  nickname: 'test'

# casbin configuration
casbin:
  model-path: './resource/rbac_model.conf'

# system configuration
system:
  env: 'public'  # Change to "develop" to skip authentication for development mode
  addr: 8888
  db-type: 'mysql'
  oss-type: 'local'    # 控制oss选择走本地还是 七牛等其他仓 自行增加其他oss仓可以在 server/utils/upload/upload.go 中 NewOss函数配置
  use-multipoint: false

# captcha configuration
captcha:
  key-long: 6
  img-width: 240
  img-height: 80

# mysql connect configuration
mysql:
  path: ''
  port: ''
  config: ''
  db-name: ''
  username: ''
  password: ''
  max-idle-conns: 10
  max-open-conns: 100
  log-mode: ""
  log-zap: false

# local configuration
local:
  path: 'uploads/file'

# autocode configuration
autocode:
  transfer-restart: true
  root: ""
  server: /server
  server-api: /api/v1
  server-initialize: /initialize
  server-model: /model
  server-request: /model/request/
  server-router: /router
  server-service: /service
  web: /web/src
  web-api: /api
  web-form: /view
  web-table: /view

# qiniu configuration (请自行七牛申请对应的 公钥 私钥 bucket 和 域名地址)
qiniu:
  zone: 'ZoneHuaDong'
  bucket: ''
  img-path: ''
  use-https: false
  access-key: ''
  secret-key: ''
  use-cdn-domains: false

# aliyun oss configuration
aliyun-oss:
  endpoint: 'yourEndpoint'
  access-key-id: 'yourAccessKeyId'
  access-key-secret: 'yourAccessKeySecret'
  bucket-name: 'yourBucketName'
  bucket-url: 'yourBucketUrl'

# tencent cos configuration
tencent-cos:
  bucket: 'xxxxx-10005608'
  region: 'ap-shanghai'
  secret-id: 'xxxxxxxx'
  secret-key: 'xxxxxxxx'
  base-url: 'https://gin.vue.admin'
  path-prefix: 'github.com/nooncall/owls/go'

# huawei obs configuration
hua-wei-obs:
  path: 'you-path'
  bucket: 'you-bucket'
  endpoint: 'you-endpoint'
  access-key: 'you-access-key'
  secret-key: 'you-secret-key'

# excel configuration
excel:
  dir: './resource/excel/'

# timer task db clear table
Timer:
  start: true
  spec: "@daily"  # 定时任务详细配置参考 https://pkg.go.dev/github.com/robfig/cron/v3
  detail: [
    # tableName: 需要清理的表名
    # compareField: 需要比较时间的字段
    # interval: 时间间隔, 具体配置详看 time.ParseDuration() 中字符串表示 且不能为负数
    # 2160h = 24 * 30 * 3 -> 三个月
    { tableName: "sys_operation_records" , compareField: "created_at", interval: "2160h" },
    #{ tableName: "log2" , compareField: "created_at", interval: "2160h" }
  ]

# 跨域配置
# 需要配合 server/initialize/router.go#L32 使用
cors:
  mode: whitelist # 放行模式: allow-all, 放行全部; whitelist, 白名单模式, 来自白名单内域名的请求添加 cors 头; strict-whitelist 严格白名单模式, 白名单外的请求一律拒绝
  whitelist:
    - allow-origin: example1.com
      allow-headers: content-type
      allow-methods: GET, POST
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type
      allow-credentials: true # 布尔值
    - allow-origin: example2.com
      allow-headers: content-type
      allow-methods: GET, POST
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type
      allow-credentials: true # 布尔值
